
from io import BytesIO
import os
from tempfile import NamedTemporaryFile, TemporaryDirectory
import cv2
import numpy as np
import openpyxl
from paddleocr import PPStructure, save_structure_res
import pandas as pd
from tablepyxl import tablepyxl
from pdf2image import convert_from_bytes
from copy import deepcopy

ROOTDIR = os.path.dirname(os.path.abspath(__file__))

table_engine = PPStructure(
    lang = 'ch',
    show_log = False, 
    # image_orientation = True,
    # det_model_dir = os.path.join(ROOTDIR, 'model\\ch_ppocr_server_v2.0_det_infer'), 
    # rec_model_dir = os.path.join(ROOTDIR, 'model\\ch_ppocr_server_v2.0_rec_infer'), 
    # table_model_dir = os.path.join(ROOTDIR, 'model\\cn_ppstructure_mobile_v2.0_SLANet_infer'), 
    # layout_model_dir = os.path.join(ROOTDIR, 'model\\picodet_lcnet_x1_0_fgd_layout_cdla_infer')
)

def pdf_to_img(pdf_bytes):
    image_bytes = []
    images = convert_from_bytes(pdf_bytes)
    for image in images:
        with NamedTemporaryFile(dir=os.path.join(ROOTDIR, 'tmp'), delete=False) as tmp:
            image.save(tmp.name, 'JPEG')
            tmp.seek(0)
            bytes = tmp.read()
            image_bytes.append(bytes)
    return image_bytes

def merge_array(*arr):
    result = []
    for a in arr:
        result.extend(a)
    return result

def result_to_table_bytes(result, name):
    tables = []
    with TemporaryDirectory(dir=os.path.join(ROOTDIR, 'tmp')) as tmpdir:
        save_structure_res(result, tmpdir, name)
        # search for the excel file
        for root, dirs, files in os.walk(tmpdir):
            for file in files:
                if file.endswith('.xlsx'):
                    with open(os.path.join(root, file), 'rb') as f:
                        tables.append(f.read())
    return tables

def combine_tables(tables):
    result = BytesIO()
    writer = pd.ExcelWriter(result, engine='openpyxl') #xlsxwriter
    len_pre = 1
    for i, table in enumerate(tables):
        df = pd.read_excel(BytesIO(table))
        df.to_excel(writer, index=False, startrow=len_pre + i * 2)
        len_pre += len(df)
        writer.sheets['Sheet1'].row_dimensions[len_pre + 2 + i * 2].fill = openpyxl.styles.PatternFill(fill_type='solid', start_color='21B2AA', end_color='21B2AA')
    writer.save()
    return result.getvalue()

def pdf_to_excel(pdf_bytes):
    image_bytes = pdf_to_img(pdf_bytes)
    result = []
    for idx, image_byte in enumerate(image_bytes):
        img = cv2.imdecode(np.frombuffer(image_byte, np.uint8), cv2.IMREAD_COLOR)
        result.append(result_to_table_bytes(table_engine(img), str(idx)))
    r = merge_array(*result)
    return combine_tables(r)

# for line in result:
#     line.pop('img')
#     print(line)

# from PIL import Image

# font_path = os.path.join(ROOTDIR, 'font/simsun.ttf')
# image = Image.open(img_path).convert('RGB')
# im_show = draw_structure_result(image, result, font_path = font_path)
# im_show = Image.fromarray(im_show)
# im_show.save('result.jpg')

# to_excel(result, 'result.xlsx')

# save_folder = './output'
# img_path = os.path.join(ROOTDIR, 'img/08.jpg')
# img = cv2.imread(img_path)
# # img = cv2.imdecode(np.frombuffer(img_bytes, np.uint8), cv2.IMREAD_COLOR)
# result0 = table_engine(img)
# # save_structure_res(result, save_folder, os.path.basename(img_path).split('.')[0])

# img_path = os.path.join(ROOTDIR, 'img/09.jpg')
# img = cv2.imread(img_path)
# result1 = table_engine(img)

# b0 = result_to_table_bytes(result0)
# b1 = result_to_table_bytes(result1)
# b = merge_array(b0, b1)
# excel = combine_tables(b)
# # write to save_folder
# with open(os.path.join(ROOTDIR, save_folder, 'result.xlsx'), 'wb') as f:
#     f.write(excel)

# PDF转图片
# 图片转Excel
# Excel合并
